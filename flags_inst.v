// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus Prime Version 17.0 (Build Build 595 04/25/2017)
// Created on Fri Nov 09 05:54:23 2018

flags flags_inst
(
	.rst(rst_sig) ,	// input  rst_sig
	.clk(clk_sig) ,	// input  clk_sig
	.c_flg(c_flg_sig) ,	// input [4:0] c_flg_sig
	.v_flg(v_flg_sig) ,	// input [5:0] v_flg_sig
	.l_res(l_res_sig) ,	// input [31:0] l_res_sig
	.l_alu(l_alu_sig) ,	// input [3:0] l_alu_sig
	.l_size(l_size_sig) ,	// input [1:0] l_size_sig
	.a_src(a_src_sig) ,	// input [15:0] a_src_sig
	.b_src(b_src_sig) ,	// input [15:0] b_src_sig
	.flg_c(flg_c_sig) ,	// input [10:0] flg_c_sig
	.cin_c(cin_c_sig) ,	// input [3:0] cin_c_sig
	.cc_out(cc_out_sig) ,	// output [4:0] cc_out_sig
	.c_in(c_in_sig) ,	// output  c_in_sig
	.z_flg(z_flg_sig) ,	// output  z_flg_sig
	.g_flg(g_flg_sig) 	// output  g_flg_sig
);


// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus Prime Version 17.0 (Build Build 595 04/25/2017)
// Created on Fri Nov 09 05:54:23 2018

alu alu_inst
(
	.rst(rst_sig) ,	// input  rst_sig
	.clk(clk_sig) ,	// input  clk_sig
	.cc_upd(cc_upd_sig) ,	// input  cc_upd_sig
	.size(size_sig) ,	// input [1:0] size_sig
	.alu_c(alu_c_sig) ,	// input [4:0] alu_c_sig
	.a_ctl(a_ctl_sig) ,	// input [1:0] a_ctl_sig
	.b_ctl(b_ctl_sig) ,	// input [1:0] b_ctl_sig
	.c_in(c_in_sig) ,	// input  c_in_sig
	.v_in(v_in_sig) ,	// input  v_in_sig
	.a_src(a_src_sig) ,	// input [15:0] a_src_sig
	.b_src(b_src_sig) ,	// input [15:0] b_src_sig
	.ram_in(ram_in_sig) ,	// input [15:0] ram_in_sig
	.io_in(io_in_sig) ,	// input [15:0] io_in_sig
	.imm_in(imm_in_sig) ,	// input [15:0] imm_in_sig
	.result(result_sig) ,	// output [31:0] result_sig
	.c_flg(c_flg_sig) ,	// output [4:0] c_flg_sig
	.v_flg(v_flg_sig) ,	// output [4:0] v_flg_sig
	.l_res(l_res_sig) ,	// output [31:0] l_res_sig
	.l_alu(l_alu_sig) ,	// output [3:0] l_alu_sig
	.l_size(l_size_sig) 	// output [1:0] l_size_sig
);

